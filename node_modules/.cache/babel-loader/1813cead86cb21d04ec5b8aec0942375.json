{"ast":null,"code":"import _objectSpread from \"/Users/david/dev/vschool/vschool-assignments/projects/Week7/Lyrical-Genius/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/david/dev/vschool/vschool-assignments/projects/Week7/Lyrical-Genius/src/GlobalProvider.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\n\nconst _React$createContext = React.createContext(),\n      Consumer = _React$createContext.Consumer,\n      Provider = _React$createContext.Provider;\n\nclass GlobalProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        lyric: ''\n      });\n      axios.get(\"https://api.lyrics.ovh/v1/\".concat(this.state.artist, \"/\").concat(this.state.song)).then(response => {\n        console.log(response.data);\n\n        if (response.data.lyrics === '') {\n          this.setState({\n            lyric: 'No Results found' // noLyric: 'Make sure the song is spelled correctly. Some songs featuring other artists might not be available.'\n\n          });\n        } else {\n          let newText = response.data.lyrics.split('\\n').map((item, i) => {\n            return React.createElement(\"p\", {\n              key: i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            }, item);\n          }); // const normalLyrics = response.data.lyrics\n          // let updatedLyrics = normalLyrics.replace()\n\n          this.setState({\n            lyric: newText\n          });\n        }\n      });\n      this.intervalID = setInterval(this.checkReady, 1000);\n    };\n\n    this.checkReady = () => {\n      if (this.state.lyric === '') {\n        this.setState({\n          lyric: 'Requesting Lyrics...'\n        });\n      }\n\n      console.log(this.state.lyric);\n\n      if (this.state.lyric !== 'Requesting Lyrics...' || this.state.counter === 17) {\n        clearInterval(this.intervalID);\n        if (this.state.lyric === 'Requesting Lyrics...') this.setState({\n          lyric: 'No Results found',\n          counter: 0\n        });else {\n          this.setState({\n            counter: 0\n          });\n        }\n      }\n\n      this.setState(prevState => {\n        return {\n          counter: prevState.counter += 1\n        };\n      });\n      console.log(this.state.counter);\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            value = _e$target.value,\n            name = _e$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSave = () => {\n      this.setState(prevState => {\n        return {\n          savedLyric: [...prevState.lyric, prevState.saveLyric]\n        };\n      });\n    };\n\n    this.state = {\n      artist: '',\n      song: '',\n      lyric: '',\n      counter: 0,\n      savedLyrics: [],\n      noLyric: ''\n    };\n    this.intervalID = null;\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      value: _objectSpread({}, this.state, {\n        handleSubmit: this.handleSubmit,\n        handleChange: this.handleChange\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default GlobalProvider;\nexport const withProvider = C => props => React.createElement(Consumer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130\n  },\n  __self: this\n}, value => React.createElement(C, Object.assign({}, value, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n}))); //","map":{"version":3,"sources":["/Users/david/dev/vschool/vschool-assignments/projects/Week7/Lyrical-Genius/src/GlobalProvider.js"],"names":["axios","React","Component","createContext","Consumer","Provider","GlobalProvider","constructor","props","handleSubmit","e","preventDefault","setState","lyric","get","state","artist","song","then","response","console","log","data","lyrics","newText","split","map","item","i","intervalID","setInterval","checkReady","counter","clearInterval","prevState","handleChange","target","value","name","handleSave","savedLyric","saveLyric","savedLyrics","noLyric","render","children","withProvider","C"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, {Component} from 'react'\nconst {Consumer, Provider } = React.createContext()\n\n\nclass GlobalProvider extends Component  {\n    constructor (props) {\n        super(props)\n        this.state = {\n            artist: '',\n            song: '',\n            lyric: '',\n            counter: 0,\n            savedLyrics: [],\n            noLyric: ''\n        }\n    \n        this.intervalID = null\n        \n\n    }\n    \n    \n    handleSubmit = (e) => {\n        e.preventDefault()\n\n        this.setState({\n           lyric: ''\n        })\n\n          axios.get(`https://api.lyrics.ovh/v1/${this.state.artist}/${this.state.song}`).then(response => {\n              console.log(response.data)\n\n             \n            if(response.data.lyrics === ''){\n                  this.setState({\n                    lyric: 'No Results found',\n                    // noLyric: 'Make sure the song is spelled correctly. Some songs featuring other artists might not be available.'\n                  })\n                \n            }else {\n                let newText = response.data.lyrics.split('\\n').map((item, i) => {\n                    return <p key={i}>{item}</p>;\n                });\n            // const normalLyrics = response.data.lyrics\n            // let updatedLyrics = normalLyrics.replace()\n                this.setState({\n                    lyric: newText\n                }) \n            \n            }\n\n        })\n            \n\n          this.intervalID = setInterval(this.checkReady, 1000)\n    }\n\n\n        checkReady = () => {\n            if(this.state.lyric === ''){\n                this.setState({\n                    lyric: 'Requesting Lyrics...'\n                })\n            } \n                console.log(this.state.lyric)\n            if (this.state.lyric !== 'Requesting Lyrics...' || this.state.counter === 17){\n                clearInterval(this.intervalID)\n                    if (this.state.lyric === 'Requesting Lyrics...')\n                    this.setState({\n                    lyric: 'No Results found',\n                    counter: 0,\n                    \n                  })\n                  else{\n                      this.setState({\n                        counter: 0\n                    })\n                }\n            }\n            this.setState((prevState) => {\n                return {counter: prevState.counter += 1}\n            })\n            console.log(this.state.counter)\n        }\n\n      handleChange = (e) => {\n          \n        const {value, name} = e.target\n        this.setState({\n                [name]: value \n        }) \n      }\n\n      handleSave = () => {\n        this.setState(prevState => {\n            return{\n                savedLyric: [...prevState.lyric, prevState.saveLyric]\n            }\n        })\n      }\n    \n\n        \n     \n\n       \n\n        render(){\n        \n\n        return(\n            <Provider value={{\n                ...this.state, \n                handleSubmit: this.handleSubmit,\n                handleChange: this.handleChange\n            }}>\n                {this.props.children}\n            </Provider>\n              \n        )\n    }\n\n}\n\nexport default GlobalProvider\n\n\nexport const withProvider = C => props => (\n    <Consumer>\n      {value => <C {...value}{...props}/>}\n    </Consumer>\n  )\n\n//   "]},"metadata":{},"sourceType":"module"}